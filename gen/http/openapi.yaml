swagger: "2.0"
info:
    title: Store API
    description: Service for a complete store with users, products, orders, and cart functionality
    version: 0.0.1
host: localhost:8000
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /cart:
        get:
            tags:
                - store
            summary: getCart store
            operationId: store#getCart
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Cart'
                        required:
                            - userID
                            - items
                            - totalAmount
            schemes:
                - http
    /cart/items:
        post:
            tags:
                - store
            summary: addToCart store
            operationId: store#addToCart
            parameters:
                - name: AddToCartRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/CartItem'
                    required:
                        - productID
                        - quantity
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Cart'
                        required:
                            - userID
                            - items
                            - totalAmount
            schemes:
                - http
    /orders:
        post:
            tags:
                - store
            summary: createOrder store
            operationId: store#createOrder
            parameters:
                - name: CreateOrderRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/NewOrder'
                    required:
                        - userID
                        - items
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/Order'
                        required:
                            - id
                            - userID
                            - items
                            - totalAmount
                            - status
            schemes:
                - http
    /orders/{id}:
        get:
            tags:
                - store
            summary: getOrder store
            operationId: store#getOrder
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Order'
                        required:
                            - id
                            - userID
                            - items
                            - totalAmount
                            - status
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StoreGetOrderNotFoundResponseBody'
            schemes:
                - http
    /products:
        get:
            tags:
                - store
            summary: listProducts store
            operationId: store#listProducts
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
            schemes:
                - http
        post:
            tags:
                - store
            summary: createProduct store
            operationId: store#createProduct
            parameters:
                - name: CreateProductRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/NewProduct'
                    required:
                        - name
                        - price
                        - inventory
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/Product'
                        required:
                            - id
                            - name
                            - price
                            - inventory
            schemes:
                - http
    /products/{id}:
        get:
            tags:
                - store
            summary: getProduct store
            operationId: store#getProduct
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Product'
                        required:
                            - id
                            - name
                            - price
                            - inventory
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StoreGetProductNotFoundResponseBody'
            schemes:
                - http
    /users:
        get:
            tags:
                - store
            summary: getUserAll store
            operationId: store#getUserAll
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
            schemes:
                - http
        post:
            tags:
                - store
            summary: createUser store
            operationId: store#createUser
            parameters:
                - name: CreateUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/NewUser'
                    required:
                        - username
                        - email
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/User'
                        required:
                            - id
                            - username
                            - email
            schemes:
                - http
    /users/{id}:
        get:
            tags:
                - store
            summary: getUser store
            operationId: store#getUser
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/User'
                        required:
                            - id
                            - username
                            - email
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StoreGetUserNotFoundResponseBody'
            schemes:
                - http
definitions:
    Cart:
        title: Cart
        type: object
        properties:
            items:
                type: array
                items:
                    $ref: '#/definitions/CartItem'
                description: Items in the cart
                example:
                    - productID: Sunt aut distinctio.
                      quantity: 7880664615933403684
                    - productID: Sunt aut distinctio.
                      quantity: 7880664615933403684
                    - productID: Sunt aut distinctio.
                      quantity: 7880664615933403684
                    - productID: Sunt aut distinctio.
                      quantity: 7880664615933403684
            totalAmount:
                type: number
                description: Total amount of items in the cart
                example: 0.9460594822373923
                format: double
            userID:
                type: string
                description: ID of the user who owns the cart
                example: Sed sit nesciunt odit perferendis.
        example:
            items:
                - productID: Sunt aut distinctio.
                  quantity: 7880664615933403684
                - productID: Sunt aut distinctio.
                  quantity: 7880664615933403684
            totalAmount: 0.2124722065947645
            userID: Laudantium quod aut et ut quo iusto.
        required:
            - userID
            - items
            - totalAmount
    CartItem:
        title: CartItem
        type: object
        properties:
            productID:
                type: string
                description: ID of the product
                example: Consequatur cumque.
            quantity:
                type: integer
                description: Quantity of the product
                example: 3480421493484762205
                format: int64
        example:
            productID: Et ut quo nostrum vero.
            quantity: 353014526584546943
        required:
            - productID
            - quantity
    NewOrder:
        title: NewOrder
        type: object
        properties:
            items:
                type: array
                items:
                    $ref: '#/definitions/OrderItem'
                description: Items in the order
                example:
                    - price: 0.2386606516661408
                      productID: Eaque earum ducimus et architecto.
                      quantity: 4622451897586657234
                    - price: 0.2386606516661408
                      productID: Eaque earum ducimus et architecto.
                      quantity: 4622451897586657234
                    - price: 0.2386606516661408
                      productID: Eaque earum ducimus et architecto.
                      quantity: 4622451897586657234
            userID:
                type: string
                description: ID of the user placing the order
                example: Quidem alias.
        example:
            items:
                - price: 0.2386606516661408
                  productID: Eaque earum ducimus et architecto.
                  quantity: 4622451897586657234
                - price: 0.2386606516661408
                  productID: Eaque earum ducimus et architecto.
                  quantity: 4622451897586657234
                - price: 0.2386606516661408
                  productID: Eaque earum ducimus et architecto.
                  quantity: 4622451897586657234
            userID: Itaque tempore et commodi laudantium.
        required:
            - userID
            - items
    NewProduct:
        title: NewProduct
        type: object
        properties:
            description:
                type: string
                description: Product description
                example: Esse et.
            inventory:
                type: integer
                description: Available inventory
                example: 4455302805282815754
                format: int64
            name:
                type: string
                description: Product name
                example: Maiores voluptatem.
            price:
                type: number
                description: Product price
                example: 0.048313113394296246
                format: double
        example:
            description: Qui officiis voluptatem.
            inventory: 1460823398759062052
            name: Praesentium recusandae quia aut ut voluptate.
            price: 0.30512582717473696
        required:
            - name
            - price
            - inventory
    NewUser:
        title: NewUser
        type: object
        properties:
            email:
                type: string
                description: User's email address
                example: Sunt quam expedita fugit.
            firstName:
                type: string
                description: User's first name
                example: Recusandae doloribus.
            lastName:
                type: string
                description: User's last name
                example: Consequuntur officia beatae laudantium eaque.
            username:
                type: string
                description: User's username
                example: Ipsum excepturi ut.
        example:
            email: Placeat et non sit.
            firstName: Autem ea harum illum molestiae officiis.
            lastName: Maxime itaque.
            username: Ut id doloribus amet tenetur est.
        required:
            - username
            - email
    Order:
        title: Order
        type: object
        properties:
            id:
                type: string
                description: Unique order ID
                example: Sint ex.
            items:
                type: array
                items:
                    $ref: '#/definitions/OrderItem'
                description: Items in the order
                example:
                    - price: 0.23952076644196968
                      productID: Voluptatem a molestias ut amet.
                      quantity: 6256948739091406382
                    - price: 0.23952076644196968
                      productID: Voluptatem a molestias ut amet.
                      quantity: 6256948739091406382
                    - price: 0.23952076644196968
                      productID: Voluptatem a molestias ut amet.
                      quantity: 6256948739091406382
            status:
                type: string
                description: Order status
                example: Quo perspiciatis ullam occaecati.
            totalAmount:
                type: number
                description: Total amount of the order
                example: 0.4710046797142728
                format: double
            userID:
                type: string
                description: ID of the user who placed the order
                example: Cumque sit tempore adipisci provident accusamus.
        example:
            id: Non hic eum id.
            items:
                - price: 0.23952076644196968
                  productID: Voluptatem a molestias ut amet.
                  quantity: 6256948739091406382
                - price: 0.23952076644196968
                  productID: Voluptatem a molestias ut amet.
                  quantity: 6256948739091406382
                - price: 0.23952076644196968
                  productID: Voluptatem a molestias ut amet.
                  quantity: 6256948739091406382
            status: Ex accusamus omnis.
            totalAmount: 0.8817036422857317
            userID: Aspernatur esse hic placeat.
        required:
            - id
            - userID
            - items
            - totalAmount
            - status
    OrderItem:
        title: OrderItem
        type: object
        properties:
            price:
                type: number
                description: Price of the product at the time of order
                example: 0.1279202597998195
                format: double
            productID:
                type: string
                description: ID of the product
                example: Animi unde ab quo alias consequatur.
            quantity:
                type: integer
                description: Quantity of the product
                example: 7895385760515067355
                format: int64
        example:
            price: 0.004896430620712159
            productID: Dolor totam voluptas aliquid unde explicabo.
            quantity: 1039259567183560186
        required:
            - productID
            - quantity
            - price
    Product:
        title: Product
        type: object
        properties:
            description:
                type: string
                description: Product description
                example: Vero in impedit.
            id:
                type: string
                description: Unique product ID
                example: Sint perspiciatis laboriosam non consectetur.
            inventory:
                type: integer
                description: Available inventory
                example: 6392137604509977408
                format: int64
            name:
                type: string
                description: Product name
                example: Blanditiis harum et.
            price:
                type: number
                description: Product price
                example: 0.8980909227070745
                format: double
        example:
            description: Corrupti totam in aut reprehenderit sint tempora.
            id: Dolores placeat accusamus.
            inventory: 614226262616467205
            name: Et explicabo ullam omnis reiciendis ut.
            price: 0.6650182041510982
        required:
            - id
            - name
            - price
            - inventory
    StoreGetOrderNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: getOrder_not-found_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    StoreGetProductNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: getProduct_not-found_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    StoreGetUserNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: getUser_not-found_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    User:
        title: User
        type: object
        properties:
            email:
                type: string
                description: User's email address
                example: Odio laboriosam in rerum quia.
            firstName:
                type: string
                description: User's first name
                example: Qui dicta porro.
            id:
                type: string
                description: Unique user ID
                example: Aliquam eos ipsum distinctio voluptas doloremque.
            lastName:
                type: string
                description: User's last name
                example: Ut aut pariatur enim similique maxime eius.
            username:
                type: string
                description: User's username
                example: Odit et sint quia.
        example:
            email: Distinctio porro cumque dolores.
            firstName: Ipsa earum in.
            id: Minima dolor consequatur quia tempore voluptatem.
            lastName: Ut minima.
            username: Doloremque quia.
        required:
            - id
            - username
            - email
